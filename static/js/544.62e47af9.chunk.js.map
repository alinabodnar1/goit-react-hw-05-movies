{"version":3,"file":"static/js/544.62e47af9.chunk.js","mappings":"4TAGO,SAASA,IACZC,EAAAA,QAAAA,OAAe,CACXC,SAAU,WAEjB,CAEM,SAASC,IACZF,EAAAA,QAAAA,QACH,CAED,IAAMG,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,sGAEcC,EAFd,UAEuBH,EAFvB,iCAEwDC,GAChDL,IAHR,SAI+BQ,EAAAA,EAAAA,IAAUD,GAJzC,cAIcE,EAJd,yBAKeA,EAASC,MALxB,gCAOQC,MAAM,2BAPd,yBASQR,IATR,4GAaeS,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,yFAEcN,EAFd,UAEuBH,EAFvB,kBAEyCS,EAFzC,oBAEuDR,GAC/CL,IAHR,SAI+BQ,EAAAA,EAAAA,IAAUD,GAJzC,cAIcE,EAJd,yBAKeA,EAASC,MALxB,gCAOQC,MAAM,2BAPd,yBASQR,IATR,4GAaeW,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,yFAEcN,EAFd,UAEuBH,EAFvB,kBAEyCS,EAFzC,4BAE+DR,GAF/D,SAG+BG,EAAAA,EAAAA,IAAUD,GAHzC,cAGcE,EAHd,yBAIeA,EAASC,MAJxB,gCAMQC,MAAM,2BANd,yFASeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,yFAEUN,EAFV,UAEmBH,EAFnB,kBAEqCS,EAFrC,4BAE2DR,GAF3D,SAG2BG,EAAAA,EAAAA,IAAUD,GAHrC,cAGUE,EAHV,yBAIWA,EAASC,MAJpB,gCAMIC,MAAM,2BANV,yFAUeK,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,yFAEcV,EAFd,UAEuBH,EAFvB,iCAEwDC,EAFxD,kBAEyEY,GACjEjB,IAHR,SAI+BQ,EAAAA,EAAAA,IAAUD,GAJzC,cAIcE,EAJd,yBAKeA,EAASC,MALxB,gCAOQC,MAAM,2BAPd,yBASQR,IATR,mG,6ICvDe,SAASe,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,MAAiBmB,MAAK,SAAAf,GAChBA,EAAKgB,SACPL,EAAUX,EAAKgB,QAElB,IACEC,OAAM,WACLC,EAAAA,GAAAA,MAAY,uEACb,GACJ,GAAE,KAGD,4BACE,SAAC,IAAD,UAAO,oBACP,wBACGR,EAAOS,KAAI,SAAAC,GAAK,OACf,SAAC,IAAD,CACEC,GAAE,UAAKD,EAAMjB,IACbmB,MAAO,CAACC,KAAMX,GAFhB,SAIGQ,EAAMI,gBAJQJ,EAAMjB,GADR,OASnB,SAAC,KAAD,CACMsB,UAAW,IACXC,SAAS,eAGpB,C,mHCpCYC,EAAQC,EAAAA,GAAAA,GAAH,iHAMLC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kI","sources":["fetchMovies.js","pages/Home/Home.jsx","pages/Home/Home.styled.js"],"sourcesContent":["import axios from \"axios\";\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nexport function startLoader() { \n    Loading.circle({\n        svgColor: '#B92F2C',\n    });\n};\n\nexport function stopLoader() { \n    Loading.remove();\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9ccf9379e20517fec2957866e8ec079';\n\nasync function getTrendMovies() {\n  try {\n        const url = `${BASE_URL}movie/popular?api_key=${API_KEY}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    }\n}\n\nasync function getMovieDetails(id) {\n  try {\n        const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    }\n}\n\nasync function getMovieCast(id) {\n  try {\n        const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } \n}\nasync function getMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    alert('Oops, an error occurred');\n  } \n}\n\nasync function getMovieSearch(query) {\n  try {\n        const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    } \n}\nexport {getTrendMovies, getMovieDetails, getMovieCast, getMovieReviews, getMovieSearch} ;","import React, {useState, useEffect} from 'react';\nimport { getTrendMovies } from '../../fetchMovies';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\nimport { Title, StyledLink } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendMovies().then(data => {\n      if (data.results) {\n        setMovies(data.results);\n      }\n    })\n      .catch(() => {\n        toast.error(\"An error occurred while responding trending movies from the backend.\")\n      });\n  }, []);\n \n  return (\n    <div>\n      <Title>Trending today</Title>\n      <ul>\n        {movies.map(movie => (\n          <StyledLink key={movie.id}\n            to={`${movie.id}`}\n            state={{from: location}} >\n            \n            {movie.original_title}\n          </StyledLink>\n        ))}\n     </ul>\n      <ToastContainer\n            autoClose={3000}\n            position=\"top-left\" />\n    </div>\n  )\n}","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom'; \n\nexport const Title = styled.h1`\n    display: block;\n    margin-left: 20px;\n    font-weight: 700;\n    color: #404040;\n`;\nexport const StyledLink = styled(Link)`\n    color: #318CE7;\n    padding: 5px;\n    display: block; \n   \n  :hover {\n    color: #FF7F50;\n    }\n`;"],"names":["startLoader","Loading","svgColor","stopLoader","BASE_URL","API_KEY","getTrendMovies","url","axios","response","data","alert","getMovieDetails","id","getMovieCast","getMovieReviews","getMovieSearch","query","Home","useState","movies","setMovies","location","useLocation","useEffect","then","results","catch","toast","map","movie","to","state","from","original_title","autoClose","position","Title","styled","StyledLink","Link"],"sourceRoot":""}