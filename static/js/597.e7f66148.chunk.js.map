{"version":3,"file":"static/js/597.e7f66148.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/Components.styled.js","fetchMovies.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getMovieCast } from '../fetchMovies';\nimport { ItemCast, ListLine, List } from './Components.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [noCast, setNoCast] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const imgURL = 'https://image.tmdb.org/t/p/w300';\n  \n  useEffect(() => {\n    getMovieCast(movieId).then(data => {\n      if (data.cast.length === 0 || !data.cast) {\n        setNoCast(true);\n        return;\n      }\n        setCast(data.cast);\n    })\n    .catch(() => {\n        alert(\"An error occurred while responding Cast from the backend.\")\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <ListLine> \n        <List>\n            {cast.map(item => (\n          <ItemCast key={item.id} state={{ from: location }} >\n            <img src={`${imgURL}${item.profile_path}`}\n                    width=\"100\"\n                    alt={item.name}></img>\n                <p><b>{item.name}</b></p>\n                <p><b>Role: </b>{item.character}</p>\n          </ItemCast> \n        ))}\n        </List>\n      </ListLine>\n      {noCast && <p>We don't have any cast for this movie.</p>}\n    </div>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 10px;\n`;\nexport const ListLine = styled.ul`\n    border-top: 1px solid #505050;\n    list-style: none;\n`;\n\nexport const Paragraph = styled.p`\n    display: block;\n    text-align: justify;\n`;\n\nexport const Form = styled.form`\n    display: block;\n    margin-top: 50px;\n`;\nexport const ItemCast = styled.ul`\n    display: block;\n    margin-top: 10px;\n`;\n    ","import axios from \"axios\";\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nexport function startLoader() { \n    Loading.circle({\n        svgColor: '#B92F2C',\n    });\n};\n\nexport function stopLoader() { \n    Loading.remove();\n};\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd9ccf9379e20517fec2957866e8ec079';\n\nasync function getTrendMovies() {\n  try {\n        const url = `${BASE_URL}movie/popular?api_key=${API_KEY}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    }\n}\n\nasync function getMovieDetails(id) {\n  try {\n        const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    }\n}\n\nasync function getMovieCast(id) {\n  try {\n        const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } \n}\nasync function getMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    alert('Oops, an error occurred');\n  } \n}\n\nasync function getMovieSearch(query) {\n  try {\n        const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n        startLoader();\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        alert('Oops, an error occurred');\n    } finally {\n        stopLoader();\n    } \n}\nexport {getTrendMovies, getMovieDetails, getMovieCast, getMovieReviews, getMovieSearch} ;"],"names":["Cast","useState","cast","setCast","noCast","setNoCast","movieId","useParams","location","useLocation","useEffect","getMovieCast","then","data","length","catch","alert","map","item","state","from","src","profile_path","width","alt","name","character","id","List","styled","ListLine","Paragraph","Form","ItemCast","startLoader","Loading","svgColor","stopLoader","BASE_URL","API_KEY","getTrendMovies","url","axios","response","getMovieDetails","getMovieReviews","getMovieSearch","query"],"sourceRoot":""}